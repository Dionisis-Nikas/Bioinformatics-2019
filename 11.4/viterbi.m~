function [score,best_path] = viterbi(prob_init,A,B,x)

    N = size(A,1);
    M = size(B,1);
    T = length(x);
    C = zeros(N,T);
    pred = size(N,T);
    
    prob_init = log2(prob_init)
    A = log2(A)
    B = log2(B)
    for i=1:N
        C(i,1) = prob_init(i) + B(x(1),i);
        [C(i,t),index] = max(v);
         pred(i,t) = index;
    end
    for t = 2:T
        for i = 1:N
            v = zeros(1,N);
            for p = 1:N
                v(p)= C(p,t-1)+A(p,i)+B(x(t),i);
            end
            [C(i,t),index] = max(v);
            pred(i,t) = index;
        end
    end
    
    %viterbi score
    [score,index] = max((C(:,T)));
    t = T;
    best_path = [];
    while pred(index,t)~=0,
        best_path = [best_path int2nt(index)];
        index = pred(index,t);
        t = t-1;
        
    end